name: Pipeline

on: [push]

env:
  APPLICATION_NAME: app2

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'   # adjust to your projectâ€™s version

      - name: Install requirements
        run: pip install --quiet --requirement requirements.txt

      - name: Lint code
        run: |
          flake8 --ignore=E501,E231 *.py
          pylint --disable=C0301 --disable=C0326 *.py

      - name: Run unit tests
        run: python -m unittest --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
          export_default_credentials: true

      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker gcr.io
          gcloud info

      - name: Build and tag image
        run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest" .

      - name: Push to GCP image registry
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APPLICATION_NAME }}:latest
